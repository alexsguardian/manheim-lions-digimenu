---
import '../styles/global.css'
import menuData from '../data/menu.json'
import MenuItemCard from '../components/MenuItemCard.astro'
import PaymentOptionCard from '../components/PaymentOptionCard.astro'
---

<html lang="en" class="h-full">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<title>Manheim Lions Digital Menu</title>
	</head>
	<body class="h-full m-0 p-0 font-sans text-base leading-6 bg-slate-50 dark:bg-slate-800 text-gray-900 dark:text-gray-100 transition-colors duration-300">
		<div class="portrait-container min-h-screen w-full flex flex-col">
			<!-- Header - Optimized for portrait 1080x1920 -->
			<header class="bg-gradient-to-r from-slate-600 to-slate-700 dark:from-slate-700 dark:to-slate-800 text-white py-4 px-6 shadow-lg transition-colors duration-300 shrink-0">
				<div class="max-w-4xl mx-auto text-center">
					<div class="flex items-center justify-center gap-4 mb-2">
						<img src="./CentennialLogo.png" alt="Manheim Lions Club" class="h-12 w-auto" onerror="this.style.display='none'" />
						<div>
							<h1 class="text-2xl font-bold tracking-tight">Manheim Lions Club</h1>
						</div>
					</div>
				</div>
			</header>

			<!-- Main Content - Optimized for portrait scrolling -->
			<main class="flex-1 overflow-y-auto py-6 px-6 bg-white dark:bg-slate-900">
				<div class="max-w-4xl mx-auto">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                        <!-- Food Section (Left) -->
                        <section class="mb-8">
                            <h2 class="text-3xl font-bold text-center text-gray-800 dark:text-white mb-6 border-b-2 border-blue-300 dark:border-blue-300 pb-3 transition-colors duration-300">
                                Food
                            </h2>
                            <div class="space-y-4">
                                {menuData.food.map((item) => (
                                    <MenuItemCard
                                        name={item.name}
                                        description={item.description}
                                        price={item.price}
                                        accentClasses="border-blue-500 dark:border-blue-300"
                                        accentColor="#2563eb"
                                        priceClasses="text-blue-600 dark:text-blue-300 shrink-0 my-auto"
                                        imageSrc={item.imageSrc ?? undefined}
                                        imageAlt={item.name}
                                    />
                                ))}
                            </div>
                        </section>

                        <!-- Beverages Section (Right) -->
                        <section class="mb-8">
                            <h2 class="text-3xl font-bold text-center text-gray-800 dark:text-white mb-6 border-b-2 border-green-300 dark:border-green-300 pb-3 transition-colors duration-300">
                                Beverages
                            </h2>
                            <div class="space-y-4">
                                {menuData.beverages.map((item) => (
                                    <MenuItemCard
                                        name={item.name}
                                        description={item.description}
                                        price={item.price}
                                        accentClasses="border-green-500 dark:border-green-300"
                                        accentColor="#16a34a"
                                        priceClasses="text-blue-600 dark:text-blue-300 shrink-0"
                                        imageSrc={item.imageSrc ?? undefined}
                                        imageAlt={item.name}
                                    />
                                ))}
                            </div>
                        </section>
                    </div>

                    <!-- Payment Info -->
                    <section class="text-center mb-10">
                        <div class="bg-gray-50 dark:bg-slate-900 border border-gray-200 dark:border-slate-700 rounded-2xl shadow-md p-8 transition-colors duration-300">
                            <h3 class="text-4xl font-extrabold mb-5 text-gray-800 dark:text-white tracking-tight">Payment Options</h3>
                            <p class="text-2xl font-semibold mb-8 text-gray-700 dark:text-gray-100">We accept cash and card payments!</p>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto">
                                <PaymentOptionCard label="Cash" accentColor="#16a34a" accentClasses="border-green-500 dark:border-green-300" />
                                <PaymentOptionCard label="Credit" accentColor="#2563eb" accentClasses="border-blue-500 dark:border-blue-300" />
                                <PaymentOptionCard label="Debit" accentColor="#a855f7" accentClasses="border-purple-500 dark:border-purple-300" />
                            </div>
                        </div>
                    </section>

					<!-- Learn More Section -->
					<!-- <section class="text-center mb-6">
						<h3 class="text-2xl font-bold mb-4 text-gray-800 dark:text-white">What is a Lion?</h3>
						<div class="bg-gray-200 dark:bg-slate-700 rounded-lg p-6 transition-colors duration-300">
							<div class="bg-gray-400 dark:bg-slate-600 rounded-lg flex items-center justify-center h-48 transition-colors duration-300">
								<div class="text-center text-gray-600 dark:text-gray-200">
									<svg class="w-12 h-12 mx-auto mb-3" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd" />
									</svg>
									<p class="text-base font-medium">Video Coming Soon</p>
								</div>
							</div>
						</div>
					</section> -->
				</div>
			</main>

			<!-- Footer - Compact -->
			<footer class="bg-gray-800 dark:bg-slate-950 text-white py-4 px-6 transition-colors duration-300 shrink-0">
				<div class="max-w-4xl mx-auto text-center">
					<p class="text-base font-medium">Thank you for supporting the Manheim Lions Club!</p>
					<p class="text-sm text-gray-300 dark:text-gray-400 mt-1">Serving our community since 1925 â€¢ manheimlions.org</p>

					<!-- Hidden theme toggle for testing -->
					<button
						id="theme-toggle"
						class="fixed bottom-2 right-2 w-8 h-8 opacity-0 hover:opacity-20 transition-opacity duration-300 bg-transparent border-none cursor-pointer z-50"
						title="Theme Toggle (Testing Only)"
						aria-label="Toggle theme for testing">
					</button>
				</div>
			</footer>
		</div>
		<script>
			// Auto dark mode based on time
			let manualOverride = false;

			function updateTheme() {
				// Skip automatic updates if manual override is active
				if (manualOverride) return;

				const now = new Date();
				const hour = now.getHours();

				// Dark mode from 7 PM (19:00) to 7 AM (07:00)
				const isDarkTime = hour >= 19 || hour < 7;

				if (isDarkTime) {
					document.documentElement.classList.add('dark');
				} else {
					document.documentElement.classList.remove('dark');
				}
			}

			// Manual theme toggle for testing
			function toggleTheme() {
				const isDark = document.documentElement.classList.contains('dark');
				if (isDark) {
					document.documentElement.classList.remove('dark');
				} else {
					document.documentElement.classList.add('dark');
				}

				// Enable manual override for 5 minutes
				manualOverride = true;
				setTimeout(() => {
					manualOverride = false;
					updateTheme(); // Resume automatic switching
				}, 5 * 60 * 1000); // 5 minutes
			}

			// Update theme immediately
			updateTheme();

			// Check every minute for theme changes
			setInterval(updateTheme, 60000);

			// Also check when page becomes visible again (in case time changed while hidden)
			document.addEventListener('visibilitychange', () => {
				if (!document.hidden) {
					updateTheme();
				}
			});

			// Add click handler for theme toggle
			document.addEventListener('DOMContentLoaded', () => {
				const toggleButton = document.getElementById('theme-toggle');
				if (toggleButton) {
					toggleButton.addEventListener('click', toggleTheme);
				}
			});
		</script>
	</body>
</html>
